<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.4">Jekyll</generator><link href="http://yamakarov.ru/feed.xml" rel="self" type="application/atom+xml" /><link href="http://yamakarov.ru/" rel="alternate" type="text/html" /><updated>2018-10-11T17:35:21+03:00</updated><id>http://yamakarov.ru/feed.xml</id><title type="html">Записки Java программиста</title><subtitle>Блог о разработке web админок, CRM-ок и прочего. 
</subtitle><entry><title type="html">Дьявольские флаги</title><link href="http://yamakarov.ru/software/2018/10/11/evil-flags.html" rel="alternate" type="text/html" title="Дьявольские флаги" /><published>2018-10-11T17:31:00+03:00</published><updated>2018-10-11T17:31:00+03:00</updated><id>http://yamakarov.ru/software/2018/10/11/evil-flags</id><content type="html" xml:base="http://yamakarov.ru/software/2018/10/11/evil-flags.html">&lt;p&gt;Если вы хотите существенно затруднить понимание программы:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Определите состояние программы с помощью 5-6 глобальных булевых переменных&lt;/li&gt;
  &lt;li&gt;Присваивайте этим переменным разные значения в ходе выполнения программы&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Собственно всё, больше ничего делать не надо, чтобы сделать сложным отладку такой программы.&lt;/p&gt;</content><author><name></name></author><summary type="html">Если вы хотите существенно затруднить понимание программы: Определите состояние программы с помощью 5-6 глобальных булевых переменных Присваивайте этим переменным разные значения в ходе выполнения программы</summary></entry><entry><title type="html">Typescript release notes</title><link href="http://yamakarov.ru/typescript/2018/10/10/release-notes.html" rel="alternate" type="text/html" title="Typescript release notes" /><published>2018-10-10T11:35:00+03:00</published><updated>2018-10-10T11:35:00+03:00</updated><id>http://yamakarov.ru/typescript/2018/10/10/release-notes</id><content type="html" xml:base="http://yamakarov.ru/typescript/2018/10/10/release-notes.html">&lt;p&gt;Чтение &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/release-notes/typescript-1-1.html&quot;&gt;Typescript release notes&lt;/a&gt; оказалось на удивление увлекательным.
Новый фичи описываются по пунктам:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Как было раньше&lt;/li&gt;
  &lt;li&gt;Как стало сейчас&lt;/li&gt;
  &lt;li&gt;Зачем это нужно&lt;/li&gt;
  &lt;li&gt;Пример использования&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Чтения “выпускающих замечаний” оказалось очень полезным и гораздо более интересным чем чтение непосредственно документации, где описания статичны и не видно развития.
Я вообще люблю исторические перспективы, приятно осознавать логики появления фич, это также помогает представить дальнейшие пути развития.&lt;/p&gt;</content><author><name></name></author><summary type="html">Чтение Typescript release notes оказалось на удивление увлекательным. Новый фичи описываются по пунктам: Как было раньше Как стало сейчас Зачем это нужно Пример использования</summary></entry><entry><title type="html">Зачем писать короткий код</title><link href="http://yamakarov.ru/software/2018/10/09/new-lines.html" rel="alternate" type="text/html" title="Зачем писать короткий код" /><published>2018-10-09T20:47:00+03:00</published><updated>2018-10-09T20:47:00+03:00</updated><id>http://yamakarov.ru/software/2018/10/09/new-lines</id><content type="html" xml:base="http://yamakarov.ru/software/2018/10/09/new-lines.html">&lt;p&gt;Оказывается иногда есть &lt;a href=&quot;https://nadav.amit.zone/blog/linux-inline&quot;&gt;смысл&lt;/a&gt; убирать лишние переносы строк.
Правда, всегда надо помнить о том, что при оптимизации надо мерить производительность, иначе велика вероятность потратить много сил впустую.
Без измерения производительности, вы не будете знать имеют ли ваши действия эффект.
Но даже измеряя, надо проверять гипотезу о том, во что упирается производительность. 
Иногда эффекты могут быть поразительными.
Статья также еще раз говорит о том, как сложен механизм &lt;a href=&quot;/jvm/2018/10/01/method-inlining.html&quot;&gt;инлайнинга&lt;/a&gt; функций.&lt;/p&gt;</content><author><name></name></author><summary type="html">Оказывается иногда есть смысл убирать лишние переносы строк. Правда, всегда надо помнить о том, что при оптимизации надо мерить производительность, иначе велика вероятность потратить много сил впустую. Без измерения производительности, вы не будете знать имеют ли ваши действия эффект. Но даже измеряя, надо проверять гипотезу о том, во что упирается производительность. Иногда эффекты могут быть поразительными. Статья также еще раз говорит о том, как сложен механизм инлайнинга функций.</summary></entry><entry><title type="html">Про научные исследования</title><link href="http://yamakarov.ru/research/2018/10/08/research.html" rel="alternate" type="text/html" title="Про научные исследования" /><published>2018-10-08T13:05:00+03:00</published><updated>2018-10-08T13:05:00+03:00</updated><id>http://yamakarov.ru/research/2018/10/08/research</id><content type="html" xml:base="http://yamakarov.ru/research/2018/10/08/research.html">&lt;p&gt;Вдохновляющий пост про то, что любой может &lt;a href=&quot;http://www.bailis.org/blog/you-can-do-research-too/&quot;&gt;попробовать себя в науке&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Вдохновляющий пост про то, что любой может попробовать себя в науке.</summary></entry><entry><title type="html">Структура хорошей статьи</title><link href="http://yamakarov.ru/captain/2018/10/05/article-structure.html" rel="alternate" type="text/html" title="Структура хорошей статьи" /><published>2018-10-05T17:04:00+03:00</published><updated>2018-10-05T17:04:00+03:00</updated><id>http://yamakarov.ru/captain/2018/10/05/article-structure</id><content type="html" xml:base="http://yamakarov.ru/captain/2018/10/05/article-structure.html">&lt;p&gt;Хорошая статья обычно содержит следующие части:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Краткое содержание или обзор, для того, чтобы читатель сразу мог понять стоит ли вообще читать статью или затронутая тема совсем не интересна&lt;/li&gt;
  &lt;li&gt;Введение, чтобы человек мог понять уровень на котором будет идти изложение, и если он слишком сложный мог прочитать предварительные материалы&lt;/li&gt;
  &lt;li&gt;Содержательные факты, непосредственно вещи которые автору удалось узнать и о которых он хочет проинформировать читателя&lt;/li&gt;
  &lt;li&gt;Обсуждение полученных фактов, изложение полученных из фактов выводов&lt;/li&gt;
  &lt;li&gt;Замечания по дальнейшим направлениям исследования&lt;/li&gt;
  &lt;li&gt;Заключение, в котором приводятся выводы и подводится итог статьи&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Хорошая статья обычно содержит следующие части:</summary></entry><entry><title type="html">NewSQL базы данных</title><link href="http://yamakarov.ru/newsql/2018/10/04/newsql.html" rel="alternate" type="text/html" title="NewSQL базы данных" /><published>2018-10-04T18:41:00+03:00</published><updated>2018-10-04T18:41:00+03:00</updated><id>http://yamakarov.ru/newsql/2018/10/04/newsql</id><content type="html" xml:base="http://yamakarov.ru/newsql/2018/10/04/newsql.html">&lt;p&gt;Очень интересная подборка ссылок на &lt;a href=&quot;http://smalldatum.blogspot.com/2018/10/transaction-processing-in-newsql.html&quot;&gt;NewSQL базы данных&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Очень интересная подборка ссылок на NewSQL базы данных</summary></entry><entry><title type="html">Теория вероятностей</title><link href="http://yamakarov.ru/probability/2018/10/03/probability.html" rel="alternate" type="text/html" title="Теория вероятностей" /><published>2018-10-03T18:00:00+03:00</published><updated>2018-10-03T18:00:00+03:00</updated><id>http://yamakarov.ru/probability/2018/10/03/probability</id><content type="html" xml:base="http://yamakarov.ru/probability/2018/10/03/probability.html">&lt;p&gt;Сегодня с коллегой обсуждали интересный факт из теории вероятностей &lt;a href=&quot;https://fermatslibrary.com/s/pick-the-largest-number&quot;&gt;про выбор наибольшего числа&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Задача чем-то напоминает задачу о &lt;a href=&quot;https://ru.wikipedia.org/wiki/%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B0_%D0%BE_%D0%B4%D0%B2%D1%83%D1%85_%D0%BA%D0%BE%D0%BD%D0%B2%D0%B5%D1%80%D1%82%D0%B0%D1%85&quot;&gt;двух конвертах&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Я даже написал симулятор на kotlin:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ru.yamakarov&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.commons.math3.distribution.UniformRealDistribution&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.0&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UniformRealDistribution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX_VALUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX_VALUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Оказалось, что выбирать при выборе t случайным образом вероятность где-то 0.67, а если брать середину интервала 
то получается 0.75&lt;/p&gt;

&lt;p&gt;И тут я не понял как моделировать бесконечные числа на компьютере.
Вероятность выбрать число среди бесконечного числа возможностей равна 0, а среди конечного пусть маленькая, но отличная от ноля.
И стратегия с 0 на бесконечном интервале не должна работать, однако я не нашел способа это проверить.&lt;/p&gt;</content><author><name></name></author><summary type="html">Сегодня с коллегой обсуждали интересный факт из теории вероятностей про выбор наибольшего числа.</summary></entry><entry><title type="html">Как подключить LaTeX к Jekyll</title><link href="http://yamakarov.ru/jekyll/latex/2018/10/02/latex.html" rel="alternate" type="text/html" title="Как подключить LaTeX к Jekyll" /><published>2018-10-02T17:44:00+03:00</published><updated>2018-10-02T17:44:00+03:00</updated><id>http://yamakarov.ru/jekyll/latex/2018/10/02/latex</id><content type="html" xml:base="http://yamakarov.ru/jekyll/latex/2018/10/02/latex.html">&lt;p&gt;Я продолжаю осваивать Jekyll и чтобы можно было писать более содержательные статьи, решил разобраться с тем как подключить LaTeX для написания формул.
Содержательность в данном случае измеряется в количестве математических формул.
Ведь нельзя же что-то доказать, не приведя ни одной формулы и не запудрив читателю мозги.&lt;/p&gt;

&lt;p&gt;Итак для того, чтобы вывести простейшую формулу:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;E = mc^2&lt;/script&gt;

&lt;p&gt;Надо написать &lt;code class=&quot;highlighter-rouge&quot;&gt;$$ E = mc^2 $$&lt;/code&gt;, знак доллара пишется 2 раза так как Markdown один убирает.
Также я подключил библиотеку &lt;a href=&quot;https://www.mathjax.org/&quot;&gt;MathJax&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Для этого я скопировал из темы minima, которую можно найти так:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle show minima
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Файл &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/head.html&lt;/code&gt; и прописал там свой скрипт.
Я кастомизирую Jekyll темы копирую в свою папку нужные файлы из общей темы и переопределяя их.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Viola!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Пост написан на основе &lt;a href=&quot;http://www.iangoodfellow.com/blog/jekyll/markdown/tex/2016/11/07/latex-in-markdown.html&quot;&gt;найденного в интернете&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Я продолжаю осваивать Jekyll и чтобы можно было писать более содержательные статьи, решил разобраться с тем как подключить LaTeX для написания формул. Содержательность в данном случае измеряется в количестве математических формул. Ведь нельзя же что-то доказать, не приведя ни одной формулы и не запудрив читателю мозги.</summary></entry><entry><title type="html">Инлайнинг методов в Java</title><link href="http://yamakarov.ru/jvm/2018/10/01/method-inlining.html" rel="alternate" type="text/html" title="Инлайнинг методов в Java" /><published>2018-10-01T18:41:00+03:00</published><updated>2018-10-01T18:41:00+03:00</updated><id>http://yamakarov.ru/jvm/2018/10/01/method-inlining</id><content type="html" xml:base="http://yamakarov.ru/jvm/2018/10/01/method-inlining.html">&lt;p&gt;Я уже писал про &lt;a href=&quot;http://psy-lob-saw.blogspot.com&quot;&gt;отличный блог Нитсана Вакарта&lt;/a&gt;, посвященный внутренностям JVM.
Сегодня я хочу отметить ряд моментом в его &lt;a href=&quot;http://psy-lob-saw.blogspot.com/2018/07/how-inlined-code-confusing-profiles.html&quot;&gt;заметке про инлайнинг методов&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;В статье рассказывается, что такое инлайнинг, когда он работает и когда нет.
Пишется что плюсами является ускорение работы, за счет появления у компилятора возможности более агрессивно оптимизировать код и снятия накладных расходов на вызов метода.
К минусам относится увеличение размера исполняемого кода и в некоторых случаях уменьшение производительности из-за того, что компилятору приходится работать с большими частями кода.&lt;/p&gt;

&lt;p&gt;Написано о опциях JVM &lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+PrintInlining&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;-XX:+PrintCompilation&lt;/code&gt; которые позволяют узнать какие методы скомпилированы и заинлайнены.&lt;/p&gt;

&lt;p&gt;В конце говорится о том, что итак сложный для понимания процесс превращения кода в инструкции для компьютера, становится экспоненциально сложнее с введением инлайнинга.&lt;/p&gt;</content><author><name></name></author><summary type="html">Я уже писал про отличный блог Нитсана Вакарта, посвященный внутренностям JVM. Сегодня я хочу отметить ряд моментом в его заметке про инлайнинг методов.</summary></entry><entry><title type="html">Немного о массивах в Kotlin</title><link href="http://yamakarov.ru/kotlin/2018/09/28/kotlin-array-2.html" rel="alternate" type="text/html" title="Немного о массивах в Kotlin" /><published>2018-09-28T17:41:00+03:00</published><updated>2018-09-28T17:41:00+03:00</updated><id>http://yamakarov.ru/kotlin/2018/09/28/kotlin-array-2</id><content type="html" xml:base="http://yamakarov.ru/kotlin/2018/09/28/kotlin-array-2.html">&lt;p&gt;Полгода назад я собирался &lt;a href=&quot;/kotlin/2018/04/08/kotlin-array.html&quot;&gt;разобраться&lt;/a&gt; с массивами в Kotlin.
Нельзя сказать, чтобы я разобрался, но у меня появилось несколько замечаний по этому поводу.
Возьмем простейший код:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ru.yamakarov.arrays&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Удобно, что не надо писать оператор &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt;, очень приятная мелочь.
Не надо писать точек с запятой, и мы как бы не поражены раком точки с запятой.
Тип массива выводится из возвращаемого значения функции инициализатора.
Это очень классно придумано, не будет значений заполненных мусором. 
И не надо писать тип массива, он итак понятен, а значит, если я захочу поменять тим мне достаточно вы выражении возвращать другое значение.
В этом примере еще более удобном менять тип массива, потому что и &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; и &lt;code class=&quot;highlighter-rouge&quot;&gt;println&lt;/code&gt; принимают любые значения.&lt;/p&gt;

&lt;p&gt;Я посмотрел во что это все превращается и сделал генерацию байткода и декомпиляцию:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainKt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@NotNull&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Intrinsics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;checkParameterIsNotNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;args&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size$iv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result$iv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size$iv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i$iv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result$iv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i$iv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i$iv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var11&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;result$iv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i$iv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result$iv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;i$iv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result$iv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var13&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var13&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i$iv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;var13&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;var13&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

   &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Тут видно что используется Java массив &lt;code class=&quot;highlighter-rouge&quot;&gt;String[]&lt;/code&gt;.
Если поменять инициализатор на возвращение &lt;code class=&quot;highlighter-rouge&quot;&gt;Int&lt;/code&gt; то будет использоваться &lt;code class=&quot;highlighter-rouge&quot;&gt;Integer[]&lt;/code&gt;.
Для того, чтобы работал &lt;code class=&quot;highlighter-rouge&quot;&gt;int[]&lt;/code&gt; надо использовать &lt;code class=&quot;highlighter-rouge&quot;&gt;IntArray&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Подводя итог, кажется что можно очень кратко писать и получать производительный код.&lt;/p&gt;</content><author><name></name></author><summary type="html">Полгода назад я собирался разобраться с массивами в Kotlin. Нельзя сказать, чтобы я разобрался, но у меня появилось несколько замечаний по этому поводу. Возьмем простейший код:</summary></entry></feed>