<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.2">Jekyll</generator><link href="http://yamakarov.ru/feed.xml" rel="self" type="application/atom+xml" /><link href="http://yamakarov.ru/" rel="alternate" type="text/html" /><updated>2018-07-06T14:04:36+03:00</updated><id>http://yamakarov.ru/</id><title type="html">Записки Java программиста</title><subtitle>Блог о разработке web админок, CRM-ок и прочего. 
</subtitle><entry><title type="html">Ссылки для ознакомления с Java Memory Model</title><link href="http://yamakarov.ru/java/2018/07/06/java-memory-model.html" rel="alternate" type="text/html" title="Ссылки для ознакомления с Java Memory Model" /><published>2018-07-06T13:57:00+03:00</published><updated>2018-07-06T13:57:00+03:00</updated><id>http://yamakarov.ru/java/2018/07/06/java-memory-model</id><content type="html" xml:base="http://yamakarov.ru/java/2018/07/06/java-memory-model.html">&lt;p&gt;Java Memory Model - описывает как будут отображаться данные из памяти в процессах. 
В какой момент потоки будут узнавать об изменениях сделанных в других потоках.
JMM описана в главе 17 &lt;a href=&quot;https://docs.oracle.com/javase/specs/&quot;&gt;The Java Language Specification&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Я нашел интересный &lt;a href=&quot;https://www.cs.umd.edu/~pugh/java/memoryModel/jsr-133-faq.html&quot;&gt;FAQ&lt;/a&gt; по JMM.&lt;/p&gt;

&lt;p&gt;А оттуда есть еще более интересная ссылка на &lt;a href=&quot;http://gee.cs.oswego.edu/dl/jmm/cookbook.html&quot;&gt;материалы для авторов компиляторов&lt;/a&gt;, где собраны материалы по реализации многопоточности на разных процессорах и операционных системах.&lt;/p&gt;</content><author><name></name></author><summary type="html">Java Memory Model - описывает как будут отображаться данные из памяти в процессах. В какой момент потоки будут узнавать об изменениях сделанных в других потоках. JMM описана в главе 17 The Java Language Specification.</summary></entry><entry><title type="html">Размеры процессорных кэшей</title><link href="http://yamakarov.ru/processor/2018/07/05/cache-sizes.html" rel="alternate" type="text/html" title="Размеры процессорных кэшей" /><published>2018-07-05T14:58:00+03:00</published><updated>2018-07-05T14:58:00+03:00</updated><id>http://yamakarov.ru/processor/2018/07/05/cache-sizes</id><content type="html" xml:base="http://yamakarov.ru/processor/2018/07/05/cache-sizes.html">&lt;p&gt;В &lt;a href=&quot;https://software.intel.com/en-us/articles/intel-sdm&quot;&gt;документации от Intel&lt;/a&gt; приводятся размеры процессорных кэшей различных уровней:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;L1 обычно 64 KB&lt;/li&gt;
  &lt;li&gt;L2 в последних версиях 256 KB&lt;/li&gt;
  &lt;li&gt;L3 в зависимости от модели 4-30 MB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;И картинка из документации, чтобы понимать что где находится.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://yamakarov.ru/img/processor.png&quot; alt=&quot;Схема процессора&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">В документации от Intel приводятся размеры процессорных кэшей различных уровней: L1 обычно 64 KB L2 в последних версиях 256 KB L3 в зависимости от модели 4-30 MB</summary></entry><entry><title type="html">Интеловская документация</title><link href="http://yamakarov.ru/assembler/intel/2018/07/04/intel-docs.html" rel="alternate" type="text/html" title="Интеловская документация" /><published>2018-07-04T16:58:00+03:00</published><updated>2018-07-04T16:58:00+03:00</updated><id>http://yamakarov.ru/assembler/intel/2018/07/04/intel-docs</id><content type="html" xml:base="http://yamakarov.ru/assembler/intel/2018/07/04/intel-docs.html">&lt;p&gt;Изучая &lt;a href=&quot;https://software.intel.com/en-us/articles/intel-sdm&quot;&gt;Intel® 64 and IA-32 Architectures Software Developer’s Manual&lt;/a&gt; нашел ссылки на интересные материалы и хочу зафиксировать их здесь:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.intel.com/content/www/us/en/software-developers/intel-txt-software-development-guide.html&quot;&gt;Intel® Trusted Execution Technology Measured Launched Environment Programming Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://software.intel.com/sites/default/files/article/147714/51534-developing-multithreaded-applications.pdf&quot;&gt;Developing Multi-threaded Applications: A Platform Consistent Approach&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://software.intel.com/sites/default/files/22/30/25602&quot;&gt;Using Spin-Loops on Intel® Pentium® 4 Processor and Intel® Xeon® Processor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://software.intel.com/file/30388&quot;&gt;Performance Monitoring Unit Sharing Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://software.intel.com/en-us/isa-extensions&quot;&gt;Intel® Architecture Instruction Set Extensions Programming Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Изучая Intel® 64 and IA-32 Architectures Software Developer’s Manual нашел ссылки на интересные материалы и хочу зафиксировать их здесь:</summary></entry><entry><title type="html">Хороший способ научиться новому, посмотреть как что-то сделали другие</title><link href="http://yamakarov.ru/postresql/higload/2018/07/03/hardiscs.html" rel="alternate" type="text/html" title="Хороший способ научиться новому, посмотреть как что-то сделали другие" /><published>2018-07-03T15:03:00+03:00</published><updated>2018-07-03T15:03:00+03:00</updated><id>http://yamakarov.ru/postresql/higload/2018/07/03/hardiscs</id><content type="html" xml:base="http://yamakarov.ru/postresql/higload/2018/07/03/hardiscs.html">&lt;p&gt;Оказывается &lt;a href=&quot;https://wiki.postgresql.org/wiki/Main_Page&quot;&gt;Postgresql wiki&lt;/a&gt; не только возможность научиться пользоваться базой данных, но и источник способов оптимизации приложений на железе, интересных данных о дисках, работе операционных систем, анализе нагрузок на CPU. 
В целом это удивительный кладезь информации о выжимании из систем максимума. 
При этом необязательно пользоваться Postgresql для того, чтобы эти знания были полезны. 
Способы понять во что упирается Postgres база и ваше приложение на Java более менее одинаковые.
Единственный недостаток этой вики в том, что много битых ссылок и ссылок на платные ресурсы. 
А хочется качественной халявы)&lt;/p&gt;</content><author><name></name></author><summary type="html">Оказывается Postgresql wiki не только возможность научиться пользоваться базой данных, но и источник способов оптимизации приложений на железе, интересных данных о дисках, работе операционных систем, анализе нагрузок на CPU. В целом это удивительный кладезь информации о выжимании из систем максимума. При этом необязательно пользоваться Postgresql для того, чтобы эти знания были полезны. Способы понять во что упирается Postgres база и ваше приложение на Java более менее одинаковые. Единственный недостаток этой вики в том, что много битых ссылок и ссылок на платные ресурсы. А хочется качественной халявы)</summary></entry><entry><title type="html">Делаем контейнеры своими руками</title><link href="http://yamakarov.ru/c/system-programming/2018/07/02/containers.html" rel="alternate" type="text/html" title="Делаем контейнеры своими руками" /><published>2018-07-02T15:04:00+03:00</published><updated>2018-07-02T15:04:00+03:00</updated><id>http://yamakarov.ru/c/system-programming/2018/07/02/containers</id><content type="html" xml:base="http://yamakarov.ru/c/system-programming/2018/07/02/containers.html">&lt;p&gt;Нашел интересную статью про &lt;a href=&quot;https://blog.lizzie.io/linux-containers-in-500-loc.html#fn.41&quot;&gt;реализацию контейнеров&lt;/a&gt; своими руками.
Контейнеры это интересно:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Docker позволяет легко воспроизводить программное окружение и делать стабильные сборки&lt;/li&gt;
  &lt;li&gt;Облачные платформы во многом опираются на механизмы контейнеров&lt;/li&gt;
  &lt;li&gt;В статье большое внимание уделяется безопасному запуску непроверенных приложений и это тоже про контейнеры&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Нашел интересную статью про реализацию контейнеров своими руками. Контейнеры это интересно: Docker позволяет легко воспроизводить программное окружение и делать стабильные сборки Облачные платформы во многом опираются на механизмы контейнеров В статье большое внимание уделяется безопасному запуску непроверенных приложений и это тоже про контейнеры</summary></entry><entry><title type="html">Сдвиг чисел в строке вправо влево на Java</title><link href="http://yamakarov.ru/java/exercise/2018/06/29/rotate-numbers.html" rel="alternate" type="text/html" title="Сдвиг чисел в строке вправо влево на Java" /><published>2018-06-29T17:32:00+03:00</published><updated>2018-06-29T17:32:00+03:00</updated><id>http://yamakarov.ru/java/exercise/2018/06/29/rotate-numbers</id><content type="html" xml:base="http://yamakarov.ru/java/exercise/2018/06/29/rotate-numbers.html">&lt;p&gt;Хотел ответить на &lt;a href=&quot;https://stackoverflow.com/questions/51102530/how-to-rotate-integer-for-a-given-number-in-java&quot;&gt;вопрос&lt;/a&gt;.
Но пока писал код налетело куча ответов и вопрос заминусовали.
Плюс пытаясь написать код я понял код в вопросе и мой менее оптимальный, но умеет смещать цифры в строке вправо, влево и выводит в нужном формате даже если есть 0 в числе.
Вот что у меня получилось, авось какому-нибудь студенту пригодится код для ротации цифр в числе без использования библиотечных функций, массива и строк на java:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ru&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;yamakarov&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;examples&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RotateNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12345670&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// count digits&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;pow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shift&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shift&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstDigit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstDigit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstDigit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%0&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;d&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html">Хотел ответить на вопрос. Но пока писал код налетело куча ответов и вопрос заминусовали. Плюс пытаясь написать код я понял код в вопросе и мой менее оптимальный, но умеет смещать цифры в строке вправо, влево и выводит в нужном формате даже если есть 0 в числе. Вот что у меня получилось, авось какому-нибудь студенту пригодится код для ротации цифр в числе без использования библиотечных функций, массива и строк на java:</summary></entry><entry><title type="html">Играем с системными вызовами из Java</title><link href="http://yamakarov.ru/java/system-calls/2018/06/28/simple-system-calls.html" rel="alternate" type="text/html" title="Играем с системными вызовами из Java" /><published>2018-06-28T12:16:00+03:00</published><updated>2018-06-28T12:16:00+03:00</updated><id>http://yamakarov.ru/java/system-calls/2018/06/28/simple-system-calls</id><content type="html" xml:base="http://yamakarov.ru/java/system-calls/2018/06/28/simple-system-calls.html">&lt;p&gt;Я попробовал простой способ сделать &lt;a href=&quot;https://unix.stackexchange.com/a/1683&quot;&gt;системный вызов из Java&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ru&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;yamakarov&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;examples&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.sun.jna.Library&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.sun.jna.Native&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JnaExample&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CStdLib&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Library&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;syscall&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;CStdLib&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CStdLib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Native&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loadLibrary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;c&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CStdLib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// WARNING: These syscall numbers are for x86 only&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PID: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;syscall&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UID: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;syscall&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GID: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;syscall&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;47&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;syscall&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;136&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/tmp/create-new-directory-here&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Для этого достаточно подключить &lt;a href=&quot;https://github.com/java-native-access/jna&quot;&gt;JNA&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;net.java.dev.jna&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jna&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;4.5.1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;И получить такой результат:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PID: 4816
UID: 502
GID: 20
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Коды для системных вызовов на моей Macos я нашел по &lt;a href=&quot;https://stackoverflow.com/a/49215174/6677530&quot;&gt;наводке&lt;/a&gt; в файле &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/include/sys/syscall.h&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;JNA вообще говоря медленный по сравнению из JNI из-за своей динамичности.
Однако для экспериментов с системными вызовами очень круто и удобно.
Пока не знаю зачем мне может пригодитья этот инструмент, но выглядит забавно.&lt;/p&gt;</content><author><name></name></author><summary type="html">Я попробовал простой способ сделать системный вызов из Java:</summary></entry><entry><title type="html">Неполная классификация высокой нагрузки</title><link href="http://yamakarov.ru/highload/2018/06/27/highload-types.html" rel="alternate" type="text/html" title="Неполная классификация высокой нагрузки" /><published>2018-06-27T15:17:00+03:00</published><updated>2018-06-27T15:17:00+03:00</updated><id>http://yamakarov.ru/highload/2018/06/27/highload-types</id><content type="html" xml:base="http://yamakarov.ru/highload/2018/06/27/highload-types.html">&lt;p&gt;Если у вас пользовательский сервис, с социальной составляющей то скорее всего у вас будут такие высоконагруженные компоненты:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Хранение данных о пользователе&lt;/li&gt;
  &lt;li&gt;Хранение файлов пользователя, это могут быть документы, фотки или видеофайлы, которые надо хранить как есть&lt;/li&gt;
  &lt;li&gt;Поисковый сервис&lt;/li&gt;
  &lt;li&gt;Платежный сервис&lt;/li&gt;
  &lt;li&gt;Скорее всего вы захотите дать возможность пользователям писать сообщения&lt;/li&gt;
  &lt;li&gt;Также у вас могут быть разные уведомления для пользователя&lt;/li&gt;
  &lt;li&gt;Вы будете крутить рекламу и для показа баннеров тоже нужен будет сервис&lt;/li&gt;
  &lt;li&gt;Вы, конечно, захотите отслеживать и активность пользователя, проводить A/B тестирование и разную аналитику&lt;/li&gt;
  &lt;li&gt;Вся эта огромная махина будет требовать мониторинга и сбора статистики, чтобы разработчики могли вовремя реагировать&lt;/li&gt;
  &lt;li&gt;Множество программ на куче серверов будут генерить гигабайты логов, которые разработчики иногда будут читать&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Каждая компонента будет иметь специфический профиль использования. Для того, чтобы сэкономить на железе, обеспечить высокую доступность и порадовать пользователя хочется выжимать максимум из железа.
А когда больше не выжать, хочется иметь возможность залить проблему деньгами докупив еще серверов. Поэтому для каждого компонента строятся специфические решения учитывающие особенности доступа к данным, этим и объясняется огромное количество No SQL баз данных.
И выбрав правильный инструмент, можно очень сильно сэкономить и сделать доселе немыслимое.&lt;/p&gt;</content><author><name></name></author><summary type="html">Если у вас пользовательский сервис, с социальной составляющей то скорее всего у вас будут такие высоконагруженные компоненты: Хранение данных о пользователе Хранение файлов пользователя, это могут быть документы, фотки или видеофайлы, которые надо хранить как есть Поисковый сервис Платежный сервис Скорее всего вы захотите дать возможность пользователям писать сообщения Также у вас могут быть разные уведомления для пользователя Вы будете крутить рекламу и для показа баннеров тоже нужен будет сервис Вы, конечно, захотите отслеживать и активность пользователя, проводить A/B тестирование и разную аналитику Вся эта огромная махина будет требовать мониторинга и сбора статистики, чтобы разработчики могли вовремя реагировать Множество программ на куче серверов будут генерить гигабайты логов, которые разработчики иногда будут читать</summary></entry><entry><title type="html">Многозадачность и прерывания</title><link href="http://yamakarov.ru/multithreading/2018/06/26/interrupts.html" rel="alternate" type="text/html" title="Многозадачность и прерывания" /><published>2018-06-26T12:38:00+03:00</published><updated>2018-06-26T12:38:00+03:00</updated><id>http://yamakarov.ru/multithreading/2018/06/26/interrupts</id><content type="html" xml:base="http://yamakarov.ru/multithreading/2018/06/26/interrupts.html">&lt;p&gt;Процессор умеет выполнять команды.
Он делает это последовательно.
Каждая команда занимает определенное время.
Некоторые команды работают очень долго.
За это время пользователь может передумать и захотеть выполнить другую команду.
Чтобы поддержать такое поведение существует механизм прерываний.
Нажав на кнопку пользователь может послать процессору специальный сигнал.
Получив такой сигнал, процессор загрузит специальную программу, обычно это код операционной системы.
Эта программа проанализирует текущие выполняемые задачи и запрос пользователя и выполнит то, что посчитает нужным в данным момент.&lt;/p&gt;

&lt;p&gt;Не только пользователь может посылать прерывания.
Они также могут приходить от внешних устройств.
Например, с сообщением об окончании ввода вывода или поступлении новых данных по сети.
Еще одним источником прерываний, который упорядочивает работу, является таймер.
Таймер может, а в операционных системах реального времени всегда делает, шлет прерывания через определенные промежутки времени.
С помощью этого механизма можно реализовать многозадачность на системах с одним процессором.
Тогда каждой задаче будет выделяться определенное, довольно короткое время, на выполнение.
Это отрезок называется квантом и по окончании кванта операционная система решает, какой процесс выполнять дальше.&lt;/p&gt;</content><author><name></name></author><summary type="html">Процессор умеет выполнять команды. Он делает это последовательно. Каждая команда занимает определенное время. Некоторые команды работают очень долго. За это время пользователь может передумать и захотеть выполнить другую команду. Чтобы поддержать такое поведение существует механизм прерываний. Нажав на кнопку пользователь может послать процессору специальный сигнал. Получив такой сигнал, процессор загрузит специальную программу, обычно это код операционной системы. Эта программа проанализирует текущие выполняемые задачи и запрос пользователя и выполнит то, что посчитает нужным в данным момент.</summary></entry><entry><title type="html">Язык программирования Forth</title><link href="http://yamakarov.ru/forth/2018/06/21/fort-materials.html" rel="alternate" type="text/html" title="Язык программирования Forth" /><published>2018-06-21T09:12:00+03:00</published><updated>2018-06-21T09:12:00+03:00</updated><id>http://yamakarov.ru/forth/2018/06/21/fort-materials</id><content type="html" xml:base="http://yamakarov.ru/forth/2018/06/21/fort-materials.html">&lt;p&gt;Есть такой замечательный язык &lt;a href=&quot;https://ru.wikipedia.org/wiki/%D0%A4%D0%BE%D1%80%D1%82_(%D1%8F%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)&quot;&gt;Forth&lt;/a&gt;.
Написал его настоящий мужик &lt;a href=&quot;https://ru.wikipedia.org/wiki/%D0%9C%D1%83%D1%80,_%D0%A7%D0%B0%D1%80%D0%BB%D1%8C%D0%B7_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82)&quot;&gt;Чарльз Мур&lt;/a&gt;, который родился в эпоху
когда мужчины сами писали драйверы устройств(&lt;a href=&quot;https://ru.wikiquote.org/wiki/%D0%9B%D0%B8%D0%BD%D1%83%D1%81_%D0%A2%D0%BE%D1%80%D0%B2%D0%B0%D0%BB%D1%8C%D0%B4%D1%81&quot;&gt;Торвальдс&lt;/a&gt;).
Forth славится своей возможностью очень быстро переходить от машинных команд к высокоуровневым концепциям.
И у меня есть задумка написать свой компилятор Forth c &lt;a href=&quot;http://lurkmore.to/%D0%91%D0%BB%D1%8D%D0%BA%D0%B4%D0%B6%D0%B5%D0%BA_%D0%B8_%D1%88%D0%BB%D1%8E%D1%85%D0%B8&quot;&gt;карамболем и профурсетками&lt;/a&gt;, чтобы лучше разобраться в устройстве компьютера.
Такое проделывали многие, например &lt;a href=&quot;https://rwmj.wordpress.com/2010/08/07/jonesforth-git-repository/&quot;&gt;Richard Jones&lt;/a&gt;.
Есть &lt;a href=&quot;https://github.com/nornagon/jonesforth&quot;&gt;репозиторий на Github&lt;/a&gt;, а сам тьюториал в файле &lt;a href=&quot;https://github.com/nornagon/jonesforth/blob/master/jonesforth.S&quot;&gt;jonesforth.S&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Есть такой замечательный язык Forth. Написал его настоящий мужик Чарльз Мур, который родился в эпоху когда мужчины сами писали драйверы устройств(Торвальдс). Forth славится своей возможностью очень быстро переходить от машинных команд к высокоуровневым концепциям. И у меня есть задумка написать свой компилятор Forth c карамболем и профурсетками, чтобы лучше разобраться в устройстве компьютера. Такое проделывали многие, например Richard Jones. Есть репозиторий на Github, а сам тьюториал в файле jonesforth.S</summary></entry></feed>