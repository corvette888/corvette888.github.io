<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.4">Jekyll</generator><link href="http://yamakarov.ru/feed.xml" rel="self" type="application/atom+xml" /><link href="http://yamakarov.ru/" rel="alternate" type="text/html" /><updated>2020-02-19T17:30:39+03:00</updated><id>http://yamakarov.ru/feed.xml</id><title type="html">Записки Java программиста</title><subtitle>Блог о разработке web админок, CRM-ок и прочего. 
</subtitle><entry><title type="html">Быстродействие оперативной памяти</title><link href="http://yamakarov.ru/2019/05/31/dram-latencies.html" rel="alternate" type="text/html" title="Быстродействие оперативной памяти" /><published>2019-05-31T12:12:00+03:00</published><updated>2019-05-31T12:12:00+03:00</updated><id>http://yamakarov.ru/2019/05/31/dram-latencies</id><content type="html" xml:base="http://yamakarov.ru/2019/05/31/dram-latencies.html">&lt;p&gt;Хочу поделиться статьей на хабре про &lt;a href=&quot;https://habr.com/ru/post/281929/&quot;&gt;быстродействие памяти&lt;/a&gt;. 
Мне особенно полезными показались комментарии в конце статьи.&lt;/p&gt;

&lt;p&gt;Для себя вынес следующие показатели:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Доступ к памяти занимает 14-50 нс&lt;/li&gt;
  &lt;li&gt;Максимальная пропускная способность 14Гб/с (можно сравнить с &lt;a href=&quot;/2019/05/28/fast-ssd.html&quot;&gt;NAND-овскими 5Гб/с&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;А началось всё с того, что обещают &lt;a href=&quot;https://medium.com/@mwolczko/non-volatile-memory-and-java-part-4-17f7a7f78f1e&quot;&gt;сдвиг парадигмы с NVRAM&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Хочу поделиться статьей на хабре про быстродействие памяти. Мне особенно полезными показались комментарии в конце статьи.</summary></entry><entry><title type="html">SSD Disk: 5Гб в секунду</title><link href="http://yamakarov.ru/2019/05/28/fast-ssd.html" rel="alternate" type="text/html" title="SSD Disk: 5Гб в секунду" /><published>2019-05-28T18:30:00+03:00</published><updated>2019-05-28T18:30:00+03:00</updated><id>http://yamakarov.ru/2019/05/28/fast-ssd</id><content type="html" xml:base="http://yamakarov.ru/2019/05/28/fast-ssd.html">&lt;p&gt;Уже появились диски, которые могут обеспечивать скорость последовательного чтения 5Гб в секунду.
Есть &lt;a href=&quot;https://hothardware.com/news/corsair-mp600&quot;&gt;Corsair MP600 M.2 SSD&lt;/a&gt; и &lt;a href=&quot;https://hothardware.com/news/gigabyte-pcie-40-ssd-teases-5gbs-ryzen-3000-zen-2-motherboards&quot;&gt;Gigabyte’s PCIe 4.0 SSD&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Уже появились диски, которые могут обеспечивать скорость последовательного чтения 5Гб в секунду. Есть Corsair MP600 M.2 SSD и Gigabyte’s PCIe 4.0 SSD.</summary></entry><entry><title type="html">Как правильно оценивать время выполнения задач?</title><link href="http://yamakarov.ru/software/2019/04/16/task-estimate.html" rel="alternate" type="text/html" title="Как правильно оценивать время выполнения задач?" /><published>2019-04-16T14:32:00+03:00</published><updated>2019-04-16T14:32:00+03:00</updated><id>http://yamakarov.ru/software/2019/04/16/task-estimate</id><content type="html" xml:base="http://yamakarov.ru/software/2019/04/16/task-estimate.html">&lt;p&gt;В статье &lt;a href=&quot;https://erikbern.com/2019/04/15/why-software-projects-take-longer-than-you-think-a-statistical-model.html&quot;&gt;Почему программные проекты требуют больше времени чем вы думаете&lt;/a&gt; высказывается интересная мысль о том, что программисты правильно оценивают медиану времени выполнения задачи, но нам надо знать среднее.&lt;/p&gt;

&lt;p&gt;Медиана, это статистическое понятие, пусть у нас есть выборка элементов и медианой будет элемент, у которого число элементов больше равно числу элементов меньше.&lt;/p&gt;

&lt;p&gt;Среднее же для выборки это сумма всех элементов деленная на количество элементов.&lt;/p&gt;

&lt;p&gt;Таким образом при оценке сроков хорошо говорят, за сколько они обычно делают ту или иную задачу. Однако проблема в том, что во время проекта ошибки в задачах не компенсируют друг друга. Ошибки в оценках накапливаются. И поэтому нам очень важно знать не за сколько обычно делается, а худший сценарий и его вероятность.&lt;/p&gt;

&lt;p&gt;Надо заметить, что выводы делаются по &lt;a href=&quot;https://github.com/Derek-Jones/SiP_dataset&quot;&gt;выборке&lt;/a&gt; из одной организации. 
Строго говоря в других могут плохо предсказывать не только медиану, но и среднее.&lt;/p&gt;

&lt;p&gt;Если представить что время выполнения задачи нормально распределено, то очень важным будет знать дисперсию, которая растет с ростом неопределенности задачи.
Чем более исследовательская и новая задача, тем больше отличается её среднее время выполнения от медианы выполнения.&lt;/p&gt;

&lt;p&gt;В целом для себя я сделал вывод, что точное планирование на длительные периоды невозможно и надо постоянно корректировать оценки.
Даже типовые решения могут давать существенные сбои в оценке времени.&lt;/p&gt;</content><author><name></name></author><summary type="html">В статье Почему программные проекты требуют больше времени чем вы думаете высказывается интересная мысль о том, что программисты правильно оценивают медиану времени выполнения задачи, но нам надо знать среднее.</summary></entry><entry><title type="html">Многопоточность без использования локов</title><link href="http://yamakarov.ru/mutlithreading/2018/12/06/no-locks.html" rel="alternate" type="text/html" title="Многопоточность без использования локов" /><published>2018-12-06T17:39:00+03:00</published><updated>2018-12-06T17:39:00+03:00</updated><id>http://yamakarov.ru/mutlithreading/2018/12/06/no-locks</id><content type="html" xml:base="http://yamakarov.ru/mutlithreading/2018/12/06/no-locks.html">&lt;p&gt;Интересный пример избавления от локов с помощью &lt;a href=&quot;http://lucteo.ro/2018/11/18/look-ma-no-locks/&quot;&gt;очереди тасков&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Очень похоже на то что делают Executors в Java. 
Например сделав Executor, который выполняет входящие таски в один поток мы гарантируем, что только этот поток и имеет доступ к ресурсу.&lt;/p&gt;

&lt;p&gt;А с помощью Future можно избавиться от callback ада, и делать вид что все выполняется синхронно последовательно.&lt;/p&gt;</content><author><name></name></author><summary type="html">Интересный пример избавления от локов с помощью очереди тасков.</summary></entry><entry><title type="html">Java LinkedList</title><link href="http://yamakarov.ru/linked-list/2018/12/05/LinkedList.html" rel="alternate" type="text/html" title="Java LinkedList" /><published>2018-12-05T17:16:00+03:00</published><updated>2018-12-05T17:16:00+03:00</updated><id>http://yamakarov.ru/linked-list/2018/12/05/LinkedList</id><content type="html" xml:base="http://yamakarov.ru/linked-list/2018/12/05/LinkedList.html">&lt;p&gt;Не могу себе представить более странную структуру данных, чем LinkedList.
С одной стороны очевидно должны существовать ситуации в которых она показывает производительность лучшую чем у ArrayList.
Однако найти такой кейс оказывается сложно.
Хотя многие уверены, что он есть и активно минусуют &lt;a href=&quot;https://stackoverflow.com/questions/322715/when-to-use-linkedlist-over-arraylist-in-java/323889#323889&quot;&gt;ответ LinkedList - отстой&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Я надеялся, что хотя бы добавление в начала списка работает быстрее в случае LinkedList, но по ходу и это не так.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Benchmark                      Mode  Cnt     Score      Error  Units
ListBenchmark.testArrayList   thrpt    5  6260.096 ± 3249.035  ops/s
ListBenchmark.testLinkedList  thrpt    5     4.953 ±    1.743  ops/s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Хотя, мой тест показывает только как драматично падает производительность при постоянном срабатывании GC.
Если же удалять перед добавлением, то получатся более похожие на правду результаты:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Benchmark                      Mode  Cnt         Score          Error  Units
ListBenchmark.testArrayList   thrpt    5     22450.002 ±     8560.238  ops/s
ListBenchmark.testLinkedList  thrpt    5  57681435.183 ± 28196927.137  ops/s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;script src=&quot;https://gist.github.com/ymakarov/a4201d51e9210f8a5494cf35c2c6b0e5.js&quot;&gt;&lt;/script&gt;</content><author><name></name></author><summary type="html">Не могу себе представить более странную структуру данных, чем LinkedList. С одной стороны очевидно должны существовать ситуации в которых она показывает производительность лучшую чем у ArrayList. Однако найти такой кейс оказывается сложно. Хотя многие уверены, что он есть и активно минусуют ответ LinkedList - отстой.</summary></entry><entry><title type="html">Google Bigquery</title><link href="http://yamakarov.ru/highload/2018/12/04/bigquery.html" rel="alternate" type="text/html" title="Google Bigquery" /><published>2018-12-04T15:15:00+03:00</published><updated>2018-12-04T15:15:00+03:00</updated><id>http://yamakarov.ru/highload/2018/12/04/bigquery</id><content type="html" xml:base="http://yamakarov.ru/highload/2018/12/04/bigquery.html">&lt;p&gt;Хорошо зарекомендовавшее себя решение для анализа больших данных: &lt;a href=&quot;https://cloud.google.com/bigquery/&quot;&gt;Bigquery&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Можно залить огромные объемы информации и сравнительно дешево хранить их в облаке.
Сервис быстро выполняет запросы.&lt;/p&gt;

&lt;p&gt;Попал на мои радары, когда я искал публично доступные &lt;a href=&quot;https://console.cloud.google.com/marketplace/browse?q=BigQuery%20Public%20Data&amp;amp;project=api-project-751434121818&amp;amp;folder&amp;amp;organizationId&quot;&gt;наборы данных&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Хорошо зарекомендовавшее себя решение для анализа больших данных: Bigquery.</summary></entry><entry><title type="html">Быстрый поиск по регулярным выражениям</title><link href="http://yamakarov.ru/software/2018/12/03/search-by-regexp.html" rel="alternate" type="text/html" title="Быстрый поиск по регулярным выражениям" /><published>2018-12-03T18:29:00+03:00</published><updated>2018-12-03T18:29:00+03:00</updated><id>http://yamakarov.ru/software/2018/12/03/search-by-regexp</id><content type="html" xml:base="http://yamakarov.ru/software/2018/12/03/search-by-regexp.html">&lt;p&gt;Случайно наткнулся на статью про &lt;a href=&quot;https://swtch.com/~rsc/regexp/regexp4.html&quot;&gt;реализацию поиска в Google Code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Автор Рас Кокс рассказывает как реализовать поиск по регулярным выражениям.
Поднимаются вопросы безопасных регулярных выражений, как правильно готовить для продакшен систем, чтобы их нельзя было задедосить.
Приводится пример построения инвертированного индекса и дается краткая историческая справка по этому методу.
В конце даются инструменты командной строки для построения и поиска по индексу на локальной машине.&lt;/p&gt;</content><author><name></name></author><summary type="html">Случайно наткнулся на статью про реализацию поиска в Google Code.</summary></entry><entry><title type="html">NoSQL на пальцах</title><link href="http://yamakarov.ru/nosql/2018/11/30/nosql.html" rel="alternate" type="text/html" title="NoSQL на пальцах" /><published>2018-11-30T18:08:00+03:00</published><updated>2018-11-30T18:08:00+03:00</updated><id>http://yamakarov.ru/nosql/2018/11/30/nosql</id><content type="html" xml:base="http://yamakarov.ru/nosql/2018/11/30/nosql.html">&lt;p&gt;Популярная статья о сущности &lt;a href=&quot;https://use-the-index-luke.com/blog/2013-04/whats-left-of-nosql&quot;&gt;NoSQL&lt;/a&gt;.
Довольно старая, но не потерявшая актуальности.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;NoSQL - это не “нет” SQL, а да и еще чуть&lt;/li&gt;
  &lt;li&gt;Лучше было говорить про NoACID, однако ACID труднее продать&lt;/li&gt;
  &lt;li&gt;SQL - жив, потому что это удобный язык для описания данных&lt;/li&gt;
  &lt;li&gt;Это все про масштабируемость за счет снижения требований к достоверности, хотим чтобы не всегда выполнялось, а когда-нибудь в будущем выполнялось&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Популярная статья о сущности NoSQL. Довольно старая, но не потерявшая актуальности.</summary></entry><entry><title type="html">Просто о Paxos</title><link href="http://yamakarov.ru/distributed/2018/11/29/lamport-paxos.html" rel="alternate" type="text/html" title="Просто о Paxos" /><published>2018-11-29T18:16:00+03:00</published><updated>2018-11-29T18:16:00+03:00</updated><id>http://yamakarov.ru/distributed/2018/11/29/lamport-paxos</id><content type="html" xml:base="http://yamakarov.ru/distributed/2018/11/29/lamport-paxos.html">&lt;p&gt;Просто о Paxos не очень получается несмотря на название  &lt;a href=&quot;file:///Users/yakov.makarov/Documents/books/articles/paxos-made-simple.pdf&quot;&gt;Paxos made simple&lt;/a&gt;.
Мне сложно осознать этот материал.
Но в целом очень нравится стиль изложения Лампорта.
По ходу повествования вводятся новые и новые минимальные требования, чем доказывается их необходимость.
И когда все что можно придумать, введено, требуется доказать достаточность и готово!&lt;/p&gt;</content><author><name></name></author><summary type="html">Просто о Paxos не очень получается несмотря на название Paxos made simple. Мне сложно осознать этот материал. Но в целом очень нравится стиль изложения Лампорта. По ходу повествования вводятся новые и новые минимальные требования, чем доказывается их необходимость. И когда все что можно придумать, введено, требуется доказать достаточность и готово!</summary></entry><entry><title type="html">В уважающем себя языке должны быть макросы</title><link href="http://yamakarov.ru/rust/2018/11/28/macros.html" rel="alternate" type="text/html" title="В уважающем себя языке должны быть макросы" /><published>2018-11-28T18:36:00+03:00</published><updated>2018-11-28T18:36:00+03:00</updated><id>http://yamakarov.ru/rust/2018/11/28/macros</id><content type="html" xml:base="http://yamakarov.ru/rust/2018/11/28/macros.html">&lt;p&gt;Rust себя уважает, в нем есть &lt;a href=&quot;https://doc.rust-lang.org/book/2018-edition/appendix-04-macros.html&quot;&gt;макросы&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Rust себя уважает, в нем есть макросы.</summary></entry></feed>