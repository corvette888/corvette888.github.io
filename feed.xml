<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-04-24T15:10:58+03:00</updated><id>http://localhost:4000/</id><title type="html">Записки Java программиста</title><subtitle>Блог о разработке web админок, crm-ок и прочего. 
</subtitle><entry><title type="html">Graal VM поражает воображение!</title><link href="http://localhost:4000/graalvm/2018/04/24/graalvm-materials.html" rel="alternate" type="text/html" title="Graal VM поражает воображение!" /><published>2018-04-24T14:55:00+03:00</published><updated>2018-04-24T14:55:00+03:00</updated><id>http://localhost:4000/graalvm/2018/04/24/graalvm-materials</id><content type="html" xml:base="http://localhost:4000/graalvm/2018/04/24/graalvm-materials.html">&lt;p&gt;&lt;a href=&quot;https://habr.com/post/319424/&quot;&gt;Перевод&lt;/a&gt; очень интересной &lt;a href=&quot;https://blog.plan99.net/graal-truffle-134d8f28fb69&quot;&gt;статьи Mike Hearn&lt;/a&gt; на хабре.&lt;/p&gt;</content><author><name></name></author><summary type="html">Перевод очень интересной статьи Mike Hearn на хабре.</summary></entry><entry><title type="html">Прерывание потоков в Java</title><link href="http://localhost:4000/java/concurrency/2018/04/24/thread-interrupt.html" rel="alternate" type="text/html" title="Прерывание потоков в Java" /><published>2018-04-24T12:13:00+03:00</published><updated>2018-04-24T12:13:00+03:00</updated><id>http://localhost:4000/java/concurrency/2018/04/24/thread-interrupt</id><content type="html" xml:base="http://localhost:4000/java/concurrency/2018/04/24/thread-interrupt.html">&lt;p&gt;Решил поиграться немного с прерыванием потоков:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ru&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;yamakarov&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;interrupt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.BufferedReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.InputStreamReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InterruptExample&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// Do some work.&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentThread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isInterrupted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Checks interruption flag without clearing it.&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Thread a was interrupted&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// Do some work.&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// When you catch InterruptedException, you must set up interruption flag or rethrow exception.&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentThread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;interrupt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStreamReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter thread to interrupt:&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

                &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;interrupt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;interrupt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;exit&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Always false, because interruption flag is cleared when the thread finishes.&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isInterrupted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isInterrupted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterruptedException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Я проверил 2 способа прервать поток.
С помощью &lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.sleep(0)&lt;/code&gt; и ловлей исключения.
И через проверку флага &lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.currentThread().isInterrupted()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Первый способ кажется более предпочтительным в случае работы нескольких потоков.
Поток будет давать возможность работать другим потокам.
Для того, чтобы реализовать такую возможность в потоке c проверкой флага, надо использоваться &lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.yield&lt;/code&gt;. Хотя, судя по документации:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Yield is a heuristic attempt to improve relative progression between threads that would otherwise over-utilise a CPU. Its use should be combined with detailed profiling and benchmarking to ensure that it actually has the desired effect.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Это может не иметь никакого эффекта.&lt;/p&gt;</content><author><name></name></author><summary type="html">Решил поиграться немного с прерыванием потоков:</summary></entry><entry><title type="html">Мой выбор технологий для web админки</title><link href="http://localhost:4000/web-app/2018/04/23/web-app.html" rel="alternate" type="text/html" title="Мой выбор технологий для web админки" /><published>2018-04-23T13:24:00+03:00</published><updated>2018-04-23T13:24:00+03:00</updated><id>http://localhost:4000/web-app/2018/04/23/web-app</id><content type="html" xml:base="http://localhost:4000/web-app/2018/04/23/web-app.html">&lt;p&gt;Я занимаюсь разработкой приложений для внутреннего использования.
Большая часть из них разного рода админки, доступные из браузера.
Если бы я начинал делать новый проект и мог выбрать любые технологии, то я бы остановился на следующих:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Angular c Typescript + angular-cli на фронтенде&lt;/li&gt;
  &lt;li&gt;Java + Spring на бекэнде, сборка c помощью Maven&lt;/li&gt;
  &lt;li&gt;Postgres в качестве базы данных&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;В каком-то будущем я планирую написать свою идеальную админку с карамболем и профурсетками, будет шаблон ReadMe и Docker.
Но пока это будущее не наступило.&lt;/p&gt;</content><author><name></name></author><summary type="html">Я занимаюсь разработкой приложений для внутреннего использования. Большая часть из них разного рода админки, доступные из браузера. Если бы я начинал делать новый проект и мог выбрать любые технологии, то я бы остановился на следующих:</summary></entry><entry><title type="html">Устанавливаем ngx-bootstrap</title><link href="http://localhost:4000/angular/ts/ngx-bootstrap/2018/04/23/ngx-bootstrap.html" rel="alternate" type="text/html" title="Устанавливаем ngx-bootstrap" /><published>2018-04-23T12:33:00+03:00</published><updated>2018-04-23T12:33:00+03:00</updated><id>http://localhost:4000/angular/ts/ngx-bootstrap/2018/04/23/ngx-bootstrap</id><content type="html" xml:base="http://localhost:4000/angular/ts/ngx-bootstrap/2018/04/23/ngx-bootstrap.html">&lt;p&gt;После работы с Java, при использовании Angular поражает большое количество мелких багов в тьюториалах и сборке примеров.
Вот и сейчас делаю я &lt;a href=&quot;https://github.com/valor-software/ngx-bootstrap/blob/development/docs/getting-started/ng-cli.md&quot;&gt;Getting started&lt;/a&gt;
для ngx-bootstrap&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm i -g @angular/cli
ng new my-app
cd my-app
ng serve
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;И при &lt;code class=&quot;highlighter-rouge&quot;&gt;ng serve&lt;/code&gt; вылетает:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module.js:538
    throw err;
    ^

Error: Cannot find module '@angular-devkit/core'
    at Function.Module._resolveFilename (module.js:536:15)
    at Function.Module._load (module.js:466:25)
    at Module.require (module.js:579:17)
    at require (internal/module.js:11:18)
    at Object.&amp;lt;anonymous&amp;gt; (/Users/yakov.makarov/Projects/web-examples/angular-ts/node_modules/@angular-devkit/schematics/src/tree/virtual.js:10:16)
    at Module._compile (module.js:635:30)
    at Object.Module._extensions..js (module.js:646:10)
    at Module.load (module.js:554:32)
    at tryModuleLoad (module.js:497:12)
    at Function.Module._load (module.js:489:3)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Спасибо &lt;a href=&quot;https://github.com/angular/devkit/issues/256&quot;&gt;https://github.com/angular/devkit/issues/256&lt;/a&gt; это удалось побороть с помощью:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install  @angular-devkit/core --save-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Но в целом эти вещи жутко магические. 
Я работаю на тем, чтобы больше разбираться, но это тяжело. 
Не знаю в чем причина, но проще разыскивать ответ в гугл, чем разбираться самому.
И в этом есть неприятный момент. 
Приятно решить задачу самому, не очень приятно просто скопировать ответ.
При этом приятно получать зарплату и по началу, когда копируешь ответ получаешь большую производительность.
Последствия такого поведения, становятся видимыми довольно не скоро. 
Но окружая себя магией, ты перестаешь управлять миром.&lt;/p&gt;

&lt;p&gt;Чтобы бороться с магией нужно специализироваться. Это позволяет досконально знать работу системы. 
Возможно ли достаточная специализация для fullstack разработчика остается под вопросом.&lt;/p&gt;</content><author><name></name></author><summary type="html">После работы с Java, при использовании Angular поражает большое количество мелких багов в тьюториалах и сборке примеров. Вот и сейчас делаю я Getting started для ngx-bootstrap</summary></entry><entry><title type="html">Вышла GraalVM</title><link href="http://localhost:4000/graal-vm/2018/04/22/graalvm.html" rel="alternate" type="text/html" title="Вышла GraalVM" /><published>2018-04-22T09:04:00+03:00</published><updated>2018-04-22T09:04:00+03:00</updated><id>http://localhost:4000/graal-vm/2018/04/22/graalvm</id><content type="html" xml:base="http://localhost:4000/graal-vm/2018/04/22/graalvm.html">&lt;p&gt;Вышла &lt;a href=&quot;https://blogs.oracle.com/developers/announcing-graalvm&quot;&gt;GraalVM&lt;/a&gt;. 
Очень интересный проект. Виртуальная машина, которую смогут пилить даже простые смертные.
GraalVM умеет выполнять:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;JVM языки Java, Scala, Groovy, Kotlin&lt;/li&gt;
  &lt;li&gt;Javascript (Node.js)&lt;/li&gt;
  &lt;li&gt;LLVM bitcode(созданный С, С++, Rust)&lt;/li&gt;
  &lt;li&gt;Экспериментальные Ruby, R и Python.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Очень круто! На &lt;a href=&quot;https://jokerconf.com/&quot;&gt;Joker&lt;/a&gt; я слыша восторженные отзывы об этой VM.&lt;/p&gt;

&lt;p&gt;Всем изучать!&lt;/p&gt;</content><author><name></name></author><summary type="html">Вышла GraalVM. Очень интересный проект. Виртуальная машина, которую смогут пилить даже простые смертные. GraalVM умеет выполнять:</summary></entry><entry><title type="html">Bootstrap приготовленный для Angular</title><link href="http://localhost:4000/angular/bootstrap/2018/04/20/angular-bootstrap.html" rel="alternate" type="text/html" title="Bootstrap приготовленный для Angular" /><published>2018-04-20T15:22:00+03:00</published><updated>2018-04-20T15:22:00+03:00</updated><id>http://localhost:4000/angular/bootstrap/2018/04/20/angular-bootstrap</id><content type="html" xml:base="http://localhost:4000/angular/bootstrap/2018/04/20/angular-bootstrap.html">&lt;p&gt;Довольно приличный порт Bootstrap под Angular &lt;a href=&quot;https://valor-software.com/ngx-bootstrap/&quot;&gt;ngx-bootstrap&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Довольно приличный порт Bootstrap под Angular ngx-bootstrap.</summary></entry><entry><title type="html">One-nio http server for great good</title><link href="http://localhost:4000/java/one-nio/2018/04/20/one-nio-http-server.html" rel="alternate" type="text/html" title="One-nio http server for great good" /><published>2018-04-20T13:50:00+03:00</published><updated>2018-04-20T13:50:00+03:00</updated><id>http://localhost:4000/java/one-nio/2018/04/20/one-nio-http-server</id><content type="html" xml:base="http://localhost:4000/java/one-nio/2018/04/20/one-nio-http-server.html">&lt;p&gt;&lt;a href=&quot;https://ok.ru&quot;&gt;Одноклассники&lt;/a&gt; палят тему для разработки высоконагруженных раздатчиков контента по http.
&lt;a href=&quot;https://github.com/odnoklassniki/one-nio/blob/master/src/one/nio/http/HttpServer.java&quot;&gt;HttpServer&lt;/a&gt; быстрый как ракета, с небольшим, но довольно сложным кодом.
Стандарт http поддерживается не полностью, но “Вам шашечки или ехать?”&lt;/p&gt;
&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/oiKwZUcgcMw&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Пример использования &lt;a href=&quot;https://github.com/odnoklassniki/one-nio/blob/master/test/one/nio/http/HttpServerTest.java&quot;&gt;HttpServerTest&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Если, что не понятно пишите на &lt;a href=&quot;mailto:yakov_makarov@mail.ru&quot;&gt;мыло&lt;/a&gt; отвечу на вопросы.&lt;/p&gt;</content><author><name></name></author><summary type="html">Одноклассники палят тему для разработки высоконагруженных раздатчиков контента по http. HttpServer быстрый как ракета, с небольшим, но довольно сложным кодом. Стандарт http поддерживается не полностью, но “Вам шашечки или ехать?”</summary></entry><entry><title type="html">Spring Security and Angular</title><link href="http://localhost:4000/spring/security/angular/2018/04/19/spring-security-angular.html" rel="alternate" type="text/html" title="Spring Security and Angular" /><published>2018-04-19T11:40:00+03:00</published><updated>2018-04-19T11:40:00+03:00</updated><id>http://localhost:4000/spring/security/angular/2018/04/19/spring-security-angular</id><content type="html" xml:base="http://localhost:4000/spring/security/angular/2018/04/19/spring-security-angular.html">&lt;p&gt;Большой &lt;a href=&quot;https://spring.io/guides/tutorials/spring-security-and-angular-js/&quot;&gt;тьюториал по использованию Spring Security и Angular&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Понадобилось установить &lt;a href=&quot;https://projects.spring.io/spring-boot/&quot;&gt;Spring boot&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew tap pivotal/tap
$ brew install springboot
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Взял этот код &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#getting-started-installing-the-cli&quot;&gt;отсюда&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Запустил:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;spring init --dependencies web,security ui/ &amp;amp;&amp;amp; cd ui
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;После магии с Idea что-то даже получилось. 
Но все как-то не гладко, названия у проектов не понятные.
Странные сообщения об ошибках.
Делать тьюториал оказалось болью, а не хорошей прогулкой.&lt;/p&gt;</content><author><name></name></author><category term="spring" /><category term="security" /><category term="angular" /><category term="java" /><summary type="html">Большой тьюториал по использованию Spring Security и Angular</summary></entry><entry><title type="html">Исходники JMH</title><link href="http://localhost:4000/jmh/2018/04/18/jmh.html" rel="alternate" type="text/html" title="Исходники JMH" /><published>2018-04-18T15:27:00+03:00</published><updated>2018-04-18T15:27:00+03:00</updated><id>http://localhost:4000/jmh/2018/04/18/jmh</id><content type="html" xml:base="http://localhost:4000/jmh/2018/04/18/jmh.html">&lt;p&gt;Начинаю цикл статей про &lt;a href=&quot;http://openjdk.java.net/projects/code-tools/jmh/&quot;&gt;jmh&lt;/a&gt;.
Ссылка на &lt;a href=&quot;http://hg.openjdk.java.net/code-tools/jmh/file/25d8b2695bac&quot;&gt;исходники&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Начинаю цикл статей про jmh. Ссылка на исходники.</summary></entry><entry><title type="html">Github: синхронизируем форк с основным репозиторием.</title><link href="http://localhost:4000/github/2018/04/18/sync-github-fork.html" rel="alternate" type="text/html" title="Github: синхронизируем форк с основным репозиторием." /><published>2018-04-18T11:20:00+03:00</published><updated>2018-04-18T11:20:00+03:00</updated><id>http://localhost:4000/github/2018/04/18/sync-github-fork</id><content type="html" xml:base="http://localhost:4000/github/2018/04/18/sync-github-fork.html">&lt;p&gt;Git позволяет просто синхронизировать репозитории.
В случае Github это можно сделать так:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote add upstream /url/to/original/repo
git fetch upstream
git checkout master
git reset --hard upstream/master  
git push origin master --force 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Взято со &lt;a href=&quot;https://stackoverflow.com/questions/9646167/clean-up-a-fork-and-restart-it-from-the-upstream&quot;&gt;Stackoverflow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Мне пришлось это сделать, потому что в основном репозитории форс пушем были убраны часть коммитов и когда я мержил мастер, в моем форке оставались коммиты которых уже не было в основном репозитори.
В целом форс пуш это зло, и поэтому по умолчанию в новых репозиториях отключен.&lt;/p&gt;</content><author><name></name></author><summary type="html">Git позволяет просто синхронизировать репозитории. В случае Github это можно сделать так:</summary></entry></feed>