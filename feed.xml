<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.4">Jekyll</generator><link href="http://yamakarov.ru/feed.xml" rel="self" type="application/atom+xml" /><link href="http://yamakarov.ru/" rel="alternate" type="text/html" /><updated>2018-12-03T18:33:53+03:00</updated><id>http://yamakarov.ru/feed.xml</id><title type="html">Записки Java программиста</title><subtitle>Блог о разработке web админок, CRM-ок и прочего. 
</subtitle><entry><title type="html">Быстрый поиск по регулярным выражениям</title><link href="http://yamakarov.ru/software/2018/12/03/search-by-regexp.html" rel="alternate" type="text/html" title="Быстрый поиск по регулярным выражениям" /><published>2018-12-03T18:29:00+03:00</published><updated>2018-12-03T18:29:00+03:00</updated><id>http://yamakarov.ru/software/2018/12/03/search-by-regexp</id><content type="html" xml:base="http://yamakarov.ru/software/2018/12/03/search-by-regexp.html">&lt;p&gt;Случайно наткнулся на статью про &lt;a href=&quot;https://swtch.com/~rsc/regexp/regexp4.html&quot;&gt;реализацию поиска в Google Code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Автор Рас Кокс рассказывает как реализовать поиск по регулярным выражениям.
Поднимаются вопросы безопасных регулярных выражений, как правильно готовить для продакшен систем, чтобы их нельзя было задедосить.
Приводится пример построения инвертированного индекса и дается краткая историческая справка по этому методу.
В конце даются инструменты командной строки для построения и поиска по индексу на локальной машине.&lt;/p&gt;</content><author><name></name></author><summary type="html">Случайно наткнулся на статью про реализацию поиска в Google Code.</summary></entry><entry><title type="html">NoSQL на пальцах</title><link href="http://yamakarov.ru/nosql/2018/11/30/nosql.html" rel="alternate" type="text/html" title="NoSQL на пальцах" /><published>2018-11-30T18:08:00+03:00</published><updated>2018-11-30T18:08:00+03:00</updated><id>http://yamakarov.ru/nosql/2018/11/30/nosql</id><content type="html" xml:base="http://yamakarov.ru/nosql/2018/11/30/nosql.html">&lt;p&gt;Популярная статья о сущности &lt;a href=&quot;https://use-the-index-luke.com/blog/2013-04/whats-left-of-nosql&quot;&gt;NoSQL&lt;/a&gt;.
Довольно старая, но не потерявшая актуальности.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;NoSQL - это не “нет” SQL, а да и еще чуть&lt;/li&gt;
  &lt;li&gt;Лучше было говорить про NoACID, однако ACID труднее продать&lt;/li&gt;
  &lt;li&gt;SQL - жив, потому что это удобный язык для описания данных&lt;/li&gt;
  &lt;li&gt;Это все про масштабируемость за счет снижения требований к достоверности, хотим чтобы не всегда выполнялось, а когда-нибудь в будущем выполнялось&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Популярная статья о сущности NoSQL. Довольно старая, но не потерявшая актуальности.</summary></entry><entry><title type="html">Просто о Paxos</title><link href="http://yamakarov.ru/distributed/2018/11/29/lamport-paxos.html" rel="alternate" type="text/html" title="Просто о Paxos" /><published>2018-11-29T18:16:00+03:00</published><updated>2018-11-29T18:16:00+03:00</updated><id>http://yamakarov.ru/distributed/2018/11/29/lamport-paxos</id><content type="html" xml:base="http://yamakarov.ru/distributed/2018/11/29/lamport-paxos.html">&lt;p&gt;Просто о Paxos не очень получается несмотря на название  &lt;a href=&quot;file:///Users/yakov.makarov/Documents/books/articles/paxos-made-simple.pdf&quot;&gt;Paxos made simple&lt;/a&gt;.
Мне сложно осознать этот материал.
Но в целом очень нравится стиль изложения Лампорта.
По ходу повествования вводятся новые и новые минимальные требования, чем доказывается их необходимость.
И когда все что можно придумать, введено, требуется доказать достаточность и готово!&lt;/p&gt;</content><author><name></name></author><summary type="html">Просто о Paxos не очень получается несмотря на название Paxos made simple. Мне сложно осознать этот материал. Но в целом очень нравится стиль изложения Лампорта. По ходу повествования вводятся новые и новые минимальные требования, чем доказывается их необходимость. И когда все что можно придумать, введено, требуется доказать достаточность и готово!</summary></entry><entry><title type="html">В уважающем себя языке должны быть макросы</title><link href="http://yamakarov.ru/rust/2018/11/28/macros.html" rel="alternate" type="text/html" title="В уважающем себя языке должны быть макросы" /><published>2018-11-28T18:36:00+03:00</published><updated>2018-11-28T18:36:00+03:00</updated><id>http://yamakarov.ru/rust/2018/11/28/macros</id><content type="html" xml:base="http://yamakarov.ru/rust/2018/11/28/macros.html">&lt;p&gt;Rust себя уважает, в нем есть &lt;a href=&quot;https://doc.rust-lang.org/book/2018-edition/appendix-04-macros.html&quot;&gt;макросы&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Rust себя уважает, в нем есть макросы.</summary></entry><entry><title type="html">Особенности виртуальной памяти</title><link href="http://yamakarov.ru/os/2018/11/27/virtual-memory.html" rel="alternate" type="text/html" title="Особенности виртуальной памяти" /><published>2018-11-27T20:46:00+03:00</published><updated>2018-11-27T20:46:00+03:00</updated><id>http://yamakarov.ru/os/2018/11/27/virtual-memory</id><content type="html" xml:base="http://yamakarov.ru/os/2018/11/27/virtual-memory.html">&lt;p&gt;Нашел интересный способ познакомиться с устройством виртуальной памяти на моем ноутбуке.
Можно вызвать команду:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vm_stats
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Эта команда выводит статистику по использованию виртуальной памяти,
которая на моем компьютере выглядит вот так:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Pages free:                             1248077.
Pages active:                           1039334.
Pages inactive:                          681085.
Pages speculative:                       102637.
Pages throttled:                              0.
Pages wired down:                        947732.
Pages purgeable:                         165924.
&quot;Translation faults&quot;:                2872353573.
Pages copy-on-write:                   84084404.
Pages zero filled:                   1389615466.
Pages reactivated:                     32939465.
Pages purged:                          21042545.
File-backed pages:                       574634.
Anonymous pages:                        1248422.
Pages stored in compressor:             1060136.
Pages occupied by compressor:            175000.
Decompressions:                        71676136.
Compressions:                         102546494.
Pageins:                               32667988.
Pageouts:                                269292.
Swapins:                               21328597.
Swapouts:                              23569093.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Так как я не указал интервал, то выводится статистика за все время работы.
Если указать 1ms или 1s то статистика будет выводиться с заданным интервалом.&lt;/p&gt;

&lt;p&gt;Посмотреть, что значат эти числа можно в мануале.&lt;/p&gt;</content><author><name></name></author><summary type="html">Нашел интересный способ познакомиться с устройством виртуальной памяти на моем ноутбуке. Можно вызвать команду:</summary></entry><entry><title type="html">Чак Норрис запускает программы без операционной системы</title><link href="http://yamakarov.ru/software/2018/11/26/without-os.html" rel="alternate" type="text/html" title="Чак Норрис запускает программы без операционной системы" /><published>2018-11-26T18:07:00+03:00</published><updated>2018-11-26T18:07:00+03:00</updated><id>http://yamakarov.ru/software/2018/11/26/without-os</id><content type="html" xml:base="http://yamakarov.ru/software/2018/11/26/without-os.html">&lt;p&gt;Очень интересный ответ на StackOverflow про то как &lt;a href=&quot;https://stackoverflow.com/questions/22054578/how-to-run-a-program-without-an-operating-system/32483545#32483545&quot;&gt;запустить программу без использования операционной системы&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Очень интересный ответ на StackOverflow про то как запустить программу без использования операционной системы.</summary></entry><entry><title type="html">Интересное введение в (Ре)Акторы</title><link href="http://yamakarov.ru/software/2018/11/23/multi-threading.html" rel="alternate" type="text/html" title="Интересное введение в (Ре)Акторы" /><published>2018-11-23T18:18:00+03:00</published><updated>2018-11-23T18:18:00+03:00</updated><id>http://yamakarov.ru/software/2018/11/23/multi-threading</id><content type="html" xml:base="http://yamakarov.ru/software/2018/11/23/multi-threading.html">&lt;p&gt;Понравились &lt;a href=&quot;http://ithare.com/multi-coring-and-non-blocking-instead-of-multi-threading-with-a-script/&quot;&gt;слайды про реакторы&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Особенно была интересная первая часть про требования и зачем нужна многопоточность.
И надо повнимательнее разобраться с третьей частью по результаты использования реакторов.
Они впечатляют, удалось снизить количество серверов в системе и при этом увеличить пропускную способность до космических значений.&lt;/p&gt;</content><author><name></name></author><summary type="html">Понравились слайды про реакторы.</summary></entry><entry><title type="html">Программирование управляемое данными</title><link href="http://yamakarov.ru/data-oriented-programming/2018/11/22/dop.html" rel="alternate" type="text/html" title="Программирование управляемое данными" /><published>2018-11-22T18:26:00+03:00</published><updated>2018-11-22T18:26:00+03:00</updated><id>http://yamakarov.ru/data-oriented-programming/2018/11/22/dop</id><content type="html" xml:base="http://yamakarov.ru/data-oriented-programming/2018/11/22/dop.html">&lt;p&gt;Посмотрел интересный доклад с CppCon 2018 про &lt;a href=&quot;https://www.youtube.com/watch?v=yy8jQgmhbAU&quot;&gt;программирование управляемое данными&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Несмотря на противоречивое название доклада, он оказался по существу и критикует результаты к которым приводит объектно ориентированная парадигма в разработке больших систем.&lt;/p&gt;

&lt;p&gt;Сокрытие данных оказывается плохой идеей, так как очень часто невозможно пользоваться из одного объекта другим не зная его реализацию.
По крайне мере очень трудно сделать это достаточно эффективно.&lt;/p&gt;

&lt;p&gt;Докладчик приводит конкретный пример реализации анимаций в движке html рендеринга, который получается ускорить в 6 раз отказавшись от работы с объектами и перейдя к использованию парадигмы 
программирования управляемого данными.&lt;/p&gt;

&lt;p&gt;В целом такой подход можно отнести к суровым оптимазициям, которые следует применять в хорошо изученной области.
Там же где требования не ясны и все изменчиво, по признанию автора, не следует отказываться от объектно-ориентированной парадигмы.&lt;/p&gt;

&lt;p&gt;В интернетах также рекомендуют посмотреть еще одно &lt;a href=&quot;https://www.youtube.com/watch?v=rX0ItVEVjHc&quot;&gt;видео&lt;/a&gt; на эту тему.&lt;/p&gt;

&lt;p&gt;В целом после доклада мне стало понятнее, как делать программы дружественные кэшу. 
Также очевидно это перекликается с функциональным программирование и программирование для видеокарт.
Этот подход способен существенно увеличить параллелизм программ.&lt;/p&gt;

&lt;p&gt;Еще Кнут писал, не распараллеливайте алгоритмы, распараллеливайте работу с данными.
И в принципе концепция пайпов обработки данных, кажется очень мощной.&lt;/p&gt;</content><author><name></name></author><summary type="html">Посмотрел интересный доклад с CppCon 2018 про программирование управляемое данными.</summary></entry><entry><title type="html">Java: вывод типов</title><link href="http://yamakarov.ru/java/2018/11/21/java-var.html" rel="alternate" type="text/html" title="Java: вывод типов" /><published>2018-11-21T14:53:00+03:00</published><updated>2018-11-21T14:53:00+03:00</updated><id>http://yamakarov.ru/java/2018/11/21/java-var</id><content type="html" xml:base="http://yamakarov.ru/java/2018/11/21/java-var.html">&lt;p&gt;В Java 10 появилось ключевое слово &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt;.
Теперь можно не писать тип переменной.
В некоторых случаях компилятор сам его выведет.
Например, работает вот такой код:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello type inference!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Эта фича сокращает объем кода, который надо написать.
Она удобна, когда у вас есть несколько вложенных вызовов, в которые передается параметр и вы хотите поменять тип этого параметра.
В этом случае вам не придется переопределять сигнатуры вызываемых методов.&lt;/p&gt;

&lt;p&gt;К недостаткам можно отнести снижение читаемости кода.
Если раньше при объявлении переменной сразу был ясен ее тип, то сейчас надо переходить к определению функции, возвращающей объект.
В IDE это сделать довольно просто, но если вы читаете пуллреквест на github, это сделать сложнее.&lt;/p&gt;

&lt;p&gt;Лично мне эта функциональность нравится и она удобна в большинстве случаев, но есть люди, которые считают это шагом назад в развитии Java.&lt;/p&gt;</content><author><name></name></author><summary type="html">В Java 10 появилось ключевое слово var. Теперь можно не писать тип переменной. В некоторых случаях компилятор сам его выведет. Например, работает вот такой код:</summary></entry><entry><title type="html">Диаграмма вложенности памяти</title><link href="http://yamakarov.ru/svg/2018/11/20/memory-diagram.html" rel="alternate" type="text/html" title="Диаграмма вложенности памяти" /><published>2018-11-20T17:35:00+03:00</published><updated>2018-11-20T17:35:00+03:00</updated><id>http://yamakarov.ru/svg/2018/11/20/memory-diagram</id><content type="html" xml:base="http://yamakarov.ru/svg/2018/11/20/memory-diagram.html">&lt;p&gt;До сих пор я не размещал в блоге диаграм.
Решил попробовать нарисовать диаграму вложенности памяти.
Вот что получилось:&lt;/p&gt;

&lt;svg height=&quot;340&quot; width=&quot;1000&quot;&gt;
  &lt;ellipse cx=&quot;300&quot; cy=&quot;160&quot; rx=&quot;200&quot; ry=&quot;150&quot; style=&quot;fill:yellow;stroke:black;stroke-width:2&quot; /&gt;
  &lt;ellipse cx=&quot;300&quot; cy=&quot;160&quot; rx=&quot;160&quot; ry=&quot;120&quot; style=&quot;fill:lightgreen;stroke:black;stroke-width:2&quot; /&gt;
  &lt;ellipse cx=&quot;300&quot; cy=&quot;160&quot; rx=&quot;120&quot; ry=&quot;90&quot; style=&quot;fill:lightblue;stroke:black;stroke-width:2&quot; /&gt;
  &lt;rect x=&quot;250&quot; y=&quot;110&quot; width=&quot;100&quot; height=&quot;100&quot; style=&quot;fill:white;stroke-width:3;stroke:rgb(0,0,0)&quot; /&gt;
  &lt;text x=&quot;270&quot; y=&quot;165&quot; fill=&quot;black&quot;&gt;Регистры&lt;/text&gt;
  &lt;text x=&quot;285&quot; y=&quot;180&quot; fill=&quot;black&quot;&gt;CPU&lt;/text&gt;
  &lt;text x=&quot;270&quot; y=&quot;230&quot; fill=&quot;black&quot;&gt;CPU Кэш&lt;/text&gt;
  &lt;text x=&quot;285&quot; y=&quot;270&quot; fill=&quot;black&quot;&gt;ОЗУ&lt;/text&gt;
  &lt;text x=&quot;285&quot; y=&quot;300&quot; fill=&quot;black&quot;&gt;ПЗУ&lt;/text&gt;
&lt;/svg&gt;

&lt;p&gt;Нарисовано с помощью простого svg:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;340&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1000&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ellipse&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cx=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;300&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cy=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;160&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rx=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;200&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ry=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;150&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fill:yellow;stroke:black;stroke-width:2&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ellipse&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cx=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;300&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cy=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;160&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rx=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;160&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ry=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;120&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fill:lightgreen;stroke:black;stroke-width:2&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ellipse&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cx=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;300&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cy=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;160&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rx=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;120&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ry=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;90&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fill:lightblue;stroke:black;stroke-width:2&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;rect&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;250&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;110&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;100&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fill:white;stroke-width:3;stroke:rgb(0,0,0)&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;text&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;270&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;165&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;black&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Регистры&lt;span class=&quot;nt&quot;&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;text&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;285&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;180&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;black&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;CPU&lt;span class=&quot;nt&quot;&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;text&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;270&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;230&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;black&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;CPU Кэш&lt;span class=&quot;nt&quot;&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;text&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;285&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;270&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;black&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;ОЗУ&lt;span class=&quot;nt&quot;&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;text&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;285&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;300&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fill=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;black&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;ПЗУ&lt;span class=&quot;nt&quot;&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html">До сих пор я не размещал в блоге диаграм. Решил попробовать нарисовать диаграму вложенности памяти. Вот что получилось:</summary></entry></feed>