<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.2">Jekyll</generator><link href="http://yamakarov.ru/feed.xml" rel="self" type="application/atom+xml" /><link href="http://yamakarov.ru/" rel="alternate" type="text/html" /><updated>2018-07-18T16:50:03+03:00</updated><id>http://yamakarov.ru/</id><title type="html">Записки Java программиста</title><subtitle>Блог о разработке web админок, CRM-ок и прочего. 
</subtitle><entry><title type="html">Streamex - дополнение к Java Stream</title><link href="http://yamakarov.ru/java/2018/07/18/streamex.html" rel="alternate" type="text/html" title="Streamex - дополнение к Java Stream" /><published>2018-07-18T16:44:00+03:00</published><updated>2018-07-18T16:44:00+03:00</updated><id>http://yamakarov.ru/java/2018/07/18/streamex</id><content type="html" xml:base="http://yamakarov.ru/java/2018/07/18/streamex.html">&lt;p&gt;Нашел простой способ разбивать поток элементов на группы с помощью &lt;a href=&quot;https://github.com/amaembo/streamex&quot;&gt;StreamEx&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iterate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;boxed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AtomicInteger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AtomicInteger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chunkSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;StreamEx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;groupRuns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;incrementAndGet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chunkSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chunk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chunk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Выводит:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[0, 1, 2, 3]
[4, 5, 6, 7]
[8, 9, 10, 11]
[12, 13, 14]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Взял &lt;a href=&quot;https://stackoverflow.com/questions/27583623/is-there-an-elegant-way-to-process-a-stream-in-chunks&quot;&gt;отсюда&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Нашел простой способ разбивать поток элементов на группы с помощью StreamEx:</summary></entry><entry><title type="html">Основные проблемы программирования</title><link href="http://yamakarov.ru/programming/2018/07/17/multi-processing.html" rel="alternate" type="text/html" title="Основные проблемы программирования" /><published>2018-07-17T16:14:00+03:00</published><updated>2018-07-17T16:14:00+03:00</updated><id>http://yamakarov.ru/programming/2018/07/17/multi-processing</id><content type="html" xml:base="http://yamakarov.ru/programming/2018/07/17/multi-processing.html">&lt;p&gt;Как известно, существует две проблемы программирования:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Именование переменных&lt;/li&gt;
  &lt;li&gt;Инвалидация кэшей&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;По поводу именования переменных мне нечего сказать, каждый начинал с того, что писал программу называл первыми попавшимися словами переменные и через месяц уже не мог понять, что в ней происходит.&lt;/p&gt;

&lt;p&gt;В этом плане сильно доставляют Handler, Service, Factory, Process, Task в конце классов. 
Сразу понятно, что экземпляр этого класса делает.&lt;/p&gt;

&lt;p&gt;Но с кэшами все гораздо интереснее. 
В моей практики они творили такие чудеса:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;показывали давно удаленные записи&lt;/li&gt;
  &lt;li&gt;чаще не показывали недавно добавленные&lt;/li&gt;
  &lt;li&gt;не давали закрывать баннер&lt;/li&gt;
  &lt;li&gt;иногда открывали его через час снова и снова и снова&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Но самое интересное, что в современных процессорах пары буферов и кэша достаточно для того, чтобы у пользователя создалось впечатление что операции присваивания переставлены местами:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Достаточно &lt;code class=&quot;highlighter-rouge&quot;&gt;a = 1&lt;/code&gt; положить в буффер записи в кэш, чтобы assert в многопоточной программе не выполнился. 
Я вообще вру, такого безобразия нет, но простейшая реализация такое допускает.&lt;/p&gt;</content><author><name></name></author><summary type="html">Как известно, существует две проблемы программирования: Именование переменных Инвалидация кэшей</summary></entry><entry><title type="html">Интересная статья про барьеры памяти</title><link href="http://yamakarov.ru/processors/2018/07/16/memory-barrier.html" rel="alternate" type="text/html" title="Интересная статья про барьеры памяти" /><published>2018-07-16T14:47:00+03:00</published><updated>2018-07-16T14:47:00+03:00</updated><id>http://yamakarov.ru/processors/2018/07/16/memory-barrier</id><content type="html" xml:base="http://yamakarov.ru/processors/2018/07/16/memory-barrier.html">&lt;p&gt;Очень понравилась статья &lt;a href=&quot;https://paulmck.livejournal.com/&quot;&gt;Paul E. McKenney&lt;/a&gt; про &lt;a href=&quot;http://www.puppetmastertrading.com/images/hwViewForSwHackers.pdf&quot;&gt;барьеры памяти&lt;/a&gt; (Memory Barriers: a Hardware View for Software Hackers).&lt;/p&gt;

&lt;p&gt;Нашел ее по ссылке из видео &lt;a href=&quot;https://shipilev.net/&quot;&gt;Шипилева&lt;/a&gt; про JMM.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/iB2N8aqwtxc&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name></name></author><summary type="html">Очень понравилась статья Paul E. McKenney про барьеры памяти (Memory Barriers: a Hardware View for Software Hackers).</summary></entry><entry><title type="html">Сортировка в Java</title><link href="http://yamakarov.ru/java/2018/07/13/java-sort.html" rel="alternate" type="text/html" title="Сортировка в Java" /><published>2018-07-13T16:18:00+03:00</published><updated>2018-07-13T16:18:00+03:00</updated><id>http://yamakarov.ru/java/2018/07/13/java-sort</id><content type="html" xml:base="http://yamakarov.ru/java/2018/07/13/java-sort.html">&lt;p&gt;Оказывает &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#sort-int:A-&quot;&gt;Arrays.sort&lt;/a&gt; в Java использует:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;@Deprecated legacyMergeSort&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.ru/search?q=DualPivotQuicksort&quot;&gt;DualPivotQuicksort&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.ru/search?q=TimSort&quot;&gt;TimSort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Оказывает Arrays.sort в Java использует: @Deprecated legacyMergeSort DualPivotQuicksort TimSort</summary></entry><entry><title type="html">Блог Марка Кэлагана</title><link href="http://yamakarov.ru/highload/mysql/2018/07/12/mysql-highload.html" rel="alternate" type="text/html" title="Блог Марка Кэлагана" /><published>2018-07-12T10:25:00+03:00</published><updated>2018-07-12T10:25:00+03:00</updated><id>http://yamakarov.ru/highload/mysql/2018/07/12/mysql-highload</id><content type="html" xml:base="http://yamakarov.ru/highload/mysql/2018/07/12/mysql-highload.html">&lt;p&gt;Очень интересный &lt;a href=&quot;http://smalldatum.blogspot.com/&quot;&gt;блог Mark Callaghan&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;В Facebook Марк руководит командой инженеров, которые поддерживают кластер MySQL серверов, выдерживающий 100 миллионов запросов в секунду.&lt;/p&gt;

&lt;p&gt;Понравилась &lt;a href=&quot;http://mysqlha.blogspot.com/2014/02/codemysqlorg.html&quot;&gt;рекомендация учить MySQL&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Интересная рекомендация &lt;a href=&quot;http://smalldatum.blogspot.com/2018/05/geek-code-for-database-algorithms_14.html&quot;&gt;для классификации алгоритмов БД&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Очень интересный блог Mark Callaghan.</summary></entry><entry><title type="html">Пример хардкорного дебага</title><link href="http://yamakarov.ru/java/trouble-shooting/2018/07/11/debug-java.html" rel="alternate" type="text/html" title="Пример хардкорного дебага" /><published>2018-07-11T11:46:00+03:00</published><updated>2018-07-11T11:46:00+03:00</updated><id>http://yamakarov.ru/java/trouble-shooting/2018/07/11/debug-java</id><content type="html" xml:base="http://yamakarov.ru/java/trouble-shooting/2018/07/11/debug-java.html">&lt;p&gt;Очень интересный пример разбор проблем с нагрузкой на CPU &lt;a href=&quot;https://medium.com/@vladimirsitniko/analyzing-a-stuck-hotspot-c2-compilation-85e0ca230744&quot;&gt;ссылка&lt;/a&gt;.
Пример и ключевые слова для дальнейшего изучения:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;top&lt;/li&gt;
  &lt;li&gt;jstack&lt;/li&gt;
  &lt;li&gt;gdb&lt;/li&gt;
  &lt;li&gt;gcore&lt;/li&gt;
  &lt;li&gt;helfy&lt;/li&gt;
  &lt;li&gt;hsdb&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Очень интересный пример разбор проблем с нагрузкой на CPU ссылка. Пример и ключевые слова для дальнейшего изучения: top jstack gdb gcore helfy hsdb</summary></entry><entry><title type="html">Немного о хэшировании</title><link href="http://yamakarov.ru/java/hash/2018/07/10/hashing.html" rel="alternate" type="text/html" title="Немного о хэшировании" /><published>2018-07-10T12:49:00+03:00</published><updated>2018-07-10T12:49:00+03:00</updated><id>http://yamakarov.ru/java/hash/2018/07/10/hashing</id><content type="html" xml:base="http://yamakarov.ru/java/hash/2018/07/10/hashing.html">&lt;p&gt;Оказывается &lt;a href=&quot;https://github.com/google/guava/wiki/HashingExplained&quot;&gt;хэширование&lt;/a&gt; можно применять не только для хранения объектов в разнообразных HashMap,
но и в менее распространенных вещах таких как &lt;a href=&quot;http://llimllib.github.io/bloomfilter-tutorial/&quot;&gt;Bloom filter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Но вы же читали &lt;a href=&quot;https://www.amazon.com/Art-Computer-Programming-3-Knuth/dp/8131709833&quot;&gt;Кнута&lt;/a&gt; и вам это совсем не удивительно.&lt;/p&gt;</content><author><name></name></author><summary type="html">Оказывается хэширование можно применять не только для хранения объектов в разнообразных HashMap, но и в менее распространенных вещах таких как Bloom filter.</summary></entry><entry><title type="html">Процессорные примитивы синхронизации</title><link href="http://yamakarov.ru/assembler/multithreading/2018/07/09/processor-sync-primitives.html" rel="alternate" type="text/html" title="Процессорные примитивы синхронизации" /><published>2018-07-09T13:55:00+03:00</published><updated>2018-07-09T13:55:00+03:00</updated><id>http://yamakarov.ru/assembler/multithreading/2018/07/09/processor-sync-primitives</id><content type="html" xml:base="http://yamakarov.ru/assembler/multithreading/2018/07/09/processor-sync-primitives.html">&lt;p&gt;Примитивы синхронизации для архитектуры 
&lt;a href=&quot;http://infocenter.arm.com/help/topic/com.arm.doc.dht0008a/DHT0008A_arm_synchronization_primitives.pdf&quot;&gt;ARM&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Примитивы синхронизации для архитектуры ARM</summary></entry><entry><title type="html">Ссылки для ознакомления с Java Memory Model</title><link href="http://yamakarov.ru/java/2018/07/06/java-memory-model.html" rel="alternate" type="text/html" title="Ссылки для ознакомления с Java Memory Model" /><published>2018-07-06T13:57:00+03:00</published><updated>2018-07-06T13:57:00+03:00</updated><id>http://yamakarov.ru/java/2018/07/06/java-memory-model</id><content type="html" xml:base="http://yamakarov.ru/java/2018/07/06/java-memory-model.html">&lt;p&gt;Java Memory Model - описывает как будут отображаться данные из памяти в процессах. 
В какой момент потоки будут узнавать об изменениях сделанных в других потоках.
JMM описана в главе 17 &lt;a href=&quot;https://docs.oracle.com/javase/specs/&quot;&gt;The Java Language Specification&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Я нашел интересный &lt;a href=&quot;https://www.cs.umd.edu/~pugh/java/memoryModel/jsr-133-faq.html&quot;&gt;FAQ&lt;/a&gt; по JMM.&lt;/p&gt;

&lt;p&gt;А оттуда есть еще более интересная ссылка на &lt;a href=&quot;http://gee.cs.oswego.edu/dl/jmm/cookbook.html&quot;&gt;материалы для авторов компиляторов&lt;/a&gt;, где собраны материалы по реализации многопоточности на разных процессорах и операционных системах.&lt;/p&gt;</content><author><name></name></author><summary type="html">Java Memory Model - описывает как будут отображаться данные из памяти в процессах. В какой момент потоки будут узнавать об изменениях сделанных в других потоках. JMM описана в главе 17 The Java Language Specification.</summary></entry><entry><title type="html">Размеры процессорных кэшей</title><link href="http://yamakarov.ru/processor/2018/07/05/cache-sizes.html" rel="alternate" type="text/html" title="Размеры процессорных кэшей" /><published>2018-07-05T14:58:00+03:00</published><updated>2018-07-05T14:58:00+03:00</updated><id>http://yamakarov.ru/processor/2018/07/05/cache-sizes</id><content type="html" xml:base="http://yamakarov.ru/processor/2018/07/05/cache-sizes.html">&lt;p&gt;В &lt;a href=&quot;https://software.intel.com/en-us/articles/intel-sdm&quot;&gt;документации от Intel&lt;/a&gt; приводятся размеры процессорных кэшей различных уровней:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;L1 обычно 64 KB&lt;/li&gt;
  &lt;li&gt;L2 в последних версиях 256 KB&lt;/li&gt;
  &lt;li&gt;L3 в зависимости от модели 4-30 MB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;И картинка из документации, чтобы понимать что где находится.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://yamakarov.ru/img/processor.png&quot; alt=&quot;Схема процессора&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">В документации от Intel приводятся размеры процессорных кэшей различных уровней: L1 обычно 64 KB L2 в последних версиях 256 KB L3 в зависимости от модели 4-30 MB</summary></entry></feed>